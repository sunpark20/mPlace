package hungry.ex_frag.day;

import hungry.ex_frag.R;

/**
 * Created by soy on 2016-08-22.
 */
public class day_statc_fc {
    public static void setTiArray() {
        Day_Activity.initAllArray();

        Day_Activity.tiArray.add(new TI(
                "오늘은 여러분들이 보내주신 기억의 궁전에 대한 질문들을 함께 살펴보겠습니다.",
                R.drawable.d5_1));
        Static.setBundle();

        Day_Activity.tiArray.add(new TI(
                "A)저도 시행착오가 있었지만, 많이 해보는 것이 정답입니다. 저는 친숙한 장소를 걸어다니며, 사진을 찍어대며 길을 걸은 적도 있습니다." +
                        "또 주말에 여행을 다녀온다면 그곳을 이용해 기억의 궁전을 만들어 무엇인가를 외웠습니다. 제가 사용하는 팁들을 몇 개 더 알려드릴께요.",
                R.drawable.d5_2));
        Static.setBundle();

        Day_Activity.tiArray.add(new TI(
                "'day2-상상하기'에서 소개했었던 체인 기억나요?" +
                        "\n저는 기억의궁전으로 뭔가를 외울 때, 1번 방에 이미지를 결합하고 " +
                        " 2번 방에서 이미지를 결합 한 뒤에, 뒤를 돌아봅니다. 뒤돌아서 이전 방을 보며 뭐가 있었는지 한번 더 확인하는 것입니다." +
                        "그런식으로 끝 방까지 가면, 그 즉시 끝에서 처음으로 가며 한번 더 외웁니다. 이것이 제가 한세트를 외우는 방식입니다.",
                R.drawable.chain));
        Static.setBundle();

        Day_Activity.tiArray.add(new TI(
                "위키피디아의 망각곡선 정의입니다.\n\n" +
                        "[ 에빙하우스는 자신을 다양한 시간 주기에 맞춰 \"WID\"와 \"ZOF\"와 같이 의미없는 음절을 암기하여" +
                        " 테스트하고 이 결과에 맞추어 그래프를 만들었는데, 이것이 우리가 망각 곡선이라고 부르는 그래프이다." +
                        " 망각 곡선에 관한 자신의 발견에서, 에빙하우스는 과잉 학습의 효과를 알아냈는데, 해당 요소를 기억하는데" +
                        " 필요한 일보다 더 많은 일을 하는 경우 기본적으로 과잉 학습을 달성한 것이라고 볼 수 있다. 과잉 학습은" +
                        " 더 이상 정보를 잃지 않게 하는 것을 보장하고, 과잉 학습된 요소의 망각 곡선은 안정적이다. ]\n\n" +
                        "이 이론은 몇 십년이나 된 아주 오래된 것입니다. 지금까지 이에 대한 많은 반론이 있었지만, " +
                        "여러분만의 망각곡선을 찾는 것은 확실히 기억에 도움이 됩니다. 외워보고 얼마의 시간이 지난 후 외웠을 때 가장 잘외워지는지 " +
                        "찾는다면 효율적으로 학습할 수 있습니다. 저의 경우에는 기억의궁전을 사용해 외운 뒤, 곧바로 외우고 다음날, 7주일, 1달, 3달후에"+
                        "외웁니다. '몇월 몇일에 ~에 관한 기억' 이라고 적어 기록하며 꾸준히 관리합니다.\n" +
                        "간혹가다 까먹은 경우에는 '분하다.. 다시는 안까먹어야지!!하며 더 자극적이고 강렬한 이미지를 몇번이고 떠올린답니다.",
                R.drawable.d5_3));
        Static.setBundle();

        Day_Activity.tiArray.add(new TI(
                "두번째 질문이네요. 50개~ 100개의 방을 만들 때는, 한 방을 여러개로 분리할 수도 있습니다. 제 방으로 예를 들어볼께요. 제 방은 들어가자마자 침대가 보입니다." +
                        "시계방향으로 90도 돌면 옷수납함이 있어요. 또 돌면 컴퓨터와 책상이 있어요. 그 다음엔 책장, 거울이 있습니다." +
                        "이런식으로 한 방에서 가구나 벽을 기준으로 뱅글 돌아 볼 수 있다면 기억의궁전이 넓어지겠죠.\n" +
                        "그리고 두번째 팁입니다. 기억의 궁전을 거닐다보면 앞이 막힌 경우가 있습니다. 예를 들어 저는 우리집 베란다에서 끝이나면 밑으로 뛰어내려 궁전을 연장합니다." +
                        " 또 사방팔방이 막혀 어디와도 이어지지 않을 경우에는 마지막 장소에 빛의 기둥을 세워 놓고, 그 옆엔 단서를 놔둡니다. 예를 들어 단서로 우럭을 놔두고 빛의 기둥을" +
                        " 타고 해운대 회센터로 이동하는 식이죠.\n" +
                        "기억력대회 세계챔피언들의 기억술들을 보면 모두 자신만의 방법이 있습니다. 팁들이 자신에게 맞다면 참고하시면 됩니다. 계속 하시다 보면 자신만의 비법이 생길거에요.",
                R.drawable.d5_4));
        Static.setBundle();

        Day_Activity.tiArray.add(new TI(
                "오늘은 미션이 없지만 하이파이브 한 번 합시다. 하지만 다음장에는...",
                R.drawable.d2_16));
        Day_Activity.touchSound.add(Day_Activity.setArrayCount);
        Static.setBundle();

        Day_Activity.tiArray.add(new TI(
                "두둥.. 첫번째 시련입니다.\n" +
                        "기억의 궁전을 사용해서 00~99까지의 숫자를 인물로 바꿔서 외우시면 됩니다. 외울 때 중요한 점은" +
                        " 인물의 특징을 같이 외워야합니다. 행동을 하거나 소품을 들고 있거나 신체적 특징이 있어야 합니다.(한가지 특징만 있으면 됩니다)" +
                        "\n예)86, 이봉주, 쌍꺼풀 수술한 눈 / 97, 조수미, 밤의 여왕 아리아를 부르고 있다.\n" +
                        "이 특징은 다음 챕터에서 쓸 재료가 될테니 꼭 같이 외워주세요!! 그럼 다 외우고 다음챕터에서 만나요!! 제법 걸릴 수도 있을 것 같군요..\n" +
                        "메인에 보면 'day5-샘플'이 있습니다. 제가 00~99를 외우는 방식이니 참고하세요. 바바이",
                R.drawable.d5_5));
        Static.setBundle();

    }
}
